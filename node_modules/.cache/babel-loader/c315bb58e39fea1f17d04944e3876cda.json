{"ast":null,"code":"import _classCallCheck from\"/Users/garrettchristian/DocumentsDesktop/csSeniorYear/isTHEA/budget_estimate_front_end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/garrettchristian/DocumentsDesktop/csSeniorYear/isTHEA/budget_estimate_front_end/node_modules/@babel/runtime/helpers/esm/createClass\";// AuthenticationService.jsx\n// following https://www.springboottutorial.com/spring-boot-react-full-stack-with-spring-security-basic-and-jwt-authentication\nimport axios from'axios';import{config}from'./Constants';var url=config.url.API_URL;export var USER_NAME_SESSION_ATTRIBUTE_NAME='authenticatedUser';// export const USER_FIRST_AND_LAST_SESSION_ATTIRBUTE = 'user'\nvar AuthenticationService=/*#__PURE__*/function(){function AuthenticationService(){_classCallCheck(this,AuthenticationService);}_createClass(AuthenticationService,[{key:\"creatAccount\",value:function creatAccount(newAccount){console.log(\"create account\");return axios.post(\"\".concat(url,\"/new/user\"),newAccount);}},{key:\"executeJwtAuthenticationService\",value:function executeJwtAuthenticationService(username,password){console.log(process.env.NODE_ENV);console.log(username);return axios.post(\"\".concat(url,\"/authenticate\"),{username:username,password:password});}},{key:\"registerSuccessfulLoginForJwt\",value:function registerSuccessfulLoginForJwt(username,token){sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,username);console.log(this.createJWTToken(token));// this.setupAxiosInterceptors(this.createJWTToken(token))\nlocalStorage.setItem(\"JWT\",this.createJWTToken(token));console.log(\"stored \",this.createJWTToken(token));console.log(\"and it's right here \",localStorage.getItem(\"JWT\"));}},{key:\"createJWTToken\",value:function createJWTToken(token){return'Bearer '+token;}},{key:\"logout\",value:function logout(){sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);}},{key:\"isUserLoggedIn\",value:function isUserLoggedIn(){var user=sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);if(user===null)return false;return true;}},{key:\"getLoggedInUserName\",value:function getLoggedInUserName(){var user=sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);if(user===null)return'';return user;}// setupAxiosInterceptors(token) {\n//     axios.interceptors.request.use(\n//         (config) => {\n//             if (this.isUserLoggedIn()) {\n//                 config.headers.authorization = token\n//                 console.log(config.headers.authorization)\n//             }\n//             return config\n//         }\n//     )\n// }\n},{key:\"getLoggedInUsersNameFirstLast\",value:function getLoggedInUsersNameFirstLast(){return axios.get(\"\".concat(url,\"/users/name\"),{headers:{Authorization:localStorage.getItem(\"JWT\")}});}// registerFirstAndLastName(name) {\n//     sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, name)\n// }\n// getLoggedInUsersNameFirstLastFromStored() {\n//     let user = sessionStorage.getItem(USER_FIRST_AND_LAST_SESSION_ATTIRBUTE)\n//     if (user === null) return ''\n//     return user\n// }\n}]);return AuthenticationService;}();export default new AuthenticationService();","map":{"version":3,"sources":["/Users/garrettchristian/DocumentsDesktop/csSeniorYear/isTHEA/budget_estimate_front_end/src/service/AuthenticationService.jsx"],"names":["axios","config","url","API_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","AuthenticationService","newAccount","console","log","post","username","password","process","env","NODE_ENV","token","sessionStorage","setItem","createJWTToken","localStorage","getItem","removeItem","user","get","headers","Authorization"],"mappings":"gVAAA;AACA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,aAAvB,CAEA,GAAIC,CAAAA,GAAG,CAAGD,MAAM,CAACC,GAAP,CAAWC,OAArB,CAEA,MAAO,IAAMC,CAAAA,gCAAgC,CAAG,mBAAzC,CACP;GAEMC,CAAAA,qB,2LAEWC,U,CAAY,CACrBC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACA,MAAOR,CAAAA,KAAK,CAACS,IAAN,WAAcP,GAAd,cAA8BI,UAA9B,CAAP,CACH,C,wFAE+BI,Q,CAAUC,Q,CAAU,CAChDJ,OAAO,CAACC,GAAR,CAAYI,OAAO,CAACC,GAAR,CAAYC,QAAxB,EACAP,OAAO,CAACC,GAAR,CAAYE,QAAZ,EACA,MAAOV,CAAAA,KAAK,CAACS,IAAN,WAAcP,GAAd,kBAAkC,CACrCQ,QAAQ,CAARA,QADqC,CAErCC,QAAQ,CAARA,QAFqC,CAAlC,CAAP,CAIH,C,oFAE6BD,Q,CAAUK,K,CAAO,CAC3CC,cAAc,CAACC,OAAf,CAAuBb,gCAAvB,CAAyDM,QAAzD,EACAH,OAAO,CAACC,GAAR,CAAY,KAAKU,cAAL,CAAoBH,KAApB,CAAZ,EACA;AACAI,YAAY,CAACF,OAAb,CAAqB,KAArB,CAA4B,KAAKC,cAAL,CAAoBH,KAApB,CAA5B,EACAR,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuB,KAAKU,cAAL,CAAoBH,KAApB,CAAvB,EACAR,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCW,YAAY,CAACC,OAAb,CAAqB,KAArB,CAApC,EAEH,C,sDAEcL,K,CAAO,CAClB,MAAO,UAAYA,KAAnB,CACH,C,uCAEQ,CACLC,cAAc,CAACK,UAAf,CAA0BjB,gCAA1B,EACH,C,uDAEgB,CACb,GAAIkB,CAAAA,IAAI,CAAGN,cAAc,CAACI,OAAf,CAAuBhB,gCAAvB,CAAX,CACA,GAAIkB,IAAI,GAAK,IAAb,CAAmB,MAAO,MAAP,CACnB,MAAO,KAAP,CACH,C,iEAEqB,CAClB,GAAIA,CAAAA,IAAI,CAAGN,cAAc,CAACI,OAAf,CAAuBhB,gCAAvB,CAAX,CACA,GAAIkB,IAAI,GAAK,IAAb,CAAmB,MAAO,EAAP,CACnB,MAAOA,CAAAA,IAAP,CACH,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;qFAEgC,CAC5B,MAAOtB,CAAAA,KAAK,CAACuB,GAAN,WAAarB,GAAb,gBAA+B,CAClCsB,OAAO,CAAE,CACPC,aAAa,CAAGN,YAAY,CAACC,OAAb,CAAqB,KAArB,CADT,CADyB,CAA/B,CAAP,CAKH,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;qCAIJ,cAAe,IAAIf,CAAAA,qBAAJ,EAAf","sourcesContent":["// AuthenticationService.jsx\n// following https://www.springboottutorial.com/spring-boot-react-full-stack-with-spring-security-basic-and-jwt-authentication\nimport axios from 'axios'\nimport { config } from './Constants'\n\nvar url = config.url.API_URL\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n// export const USER_FIRST_AND_LAST_SESSION_ATTIRBUTE = 'user'\n\nclass AuthenticationService {\n\n    creatAccount(newAccount) {\n        console.log(\"create account\")\n        return axios.post(`${url}/new/user`, newAccount)\n    }\n\n    executeJwtAuthenticationService(username, password) {\n        console.log(process.env.NODE_ENV)\n        console.log(username);\n        return axios.post(`${url}/authenticate`, {\n            username,\n            password\n        })\n    }\n\n    registerSuccessfulLoginForJwt(username, token) {\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n        console.log(this.createJWTToken(token))\n        // this.setupAxiosInterceptors(this.createJWTToken(token))\n        localStorage.setItem(\"JWT\", this.createJWTToken(token))\n        console.log(\"stored \", this.createJWTToken(token))\n        console.log(\"and it's right here \", localStorage.getItem(\"JWT\"))\n\n    }\n\n    createJWTToken(token) {\n        return 'Bearer ' + token\n    }\n\n    logout() {\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n    }\n\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return false\n        return true\n    }\n\n    getLoggedInUserName() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return ''\n        return user\n    }\n\n    // setupAxiosInterceptors(token) {\n    //     axios.interceptors.request.use(\n    //         (config) => {\n    //             if (this.isUserLoggedIn()) {\n    //                 config.headers.authorization = token\n    //                 console.log(config.headers.authorization)\n    //             }\n    //             return config\n    //         }\n    //     )\n    // }\n\n    getLoggedInUsersNameFirstLast() {\n        return axios.get(`${url}/users/name`, {\n            headers: {\n              Authorization:  localStorage.getItem(\"JWT\")\n            }\n        })\n    }\n\n    // registerFirstAndLastName(name) {\n    //     sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, name)\n    // }\n\n    // getLoggedInUsersNameFirstLastFromStored() {\n    //     let user = sessionStorage.getItem(USER_FIRST_AND_LAST_SESSION_ATTIRBUTE)\n    //     if (user === null) return ''\n    //     return user\n    // }\n\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}