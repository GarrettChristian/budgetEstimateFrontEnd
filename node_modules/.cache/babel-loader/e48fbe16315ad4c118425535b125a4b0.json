{"ast":null,"code":"// ShowService.jsx\nimport axios from 'axios';\nimport { config } from './Constants';\nvar url = config.url.API_URL;\nconst PROJECT_API_URL = `${url}/project`;\n\nclass ProjectService {\n  retrieveAllProjects() {\n    return axios.get(`${PROJECT_API_URL}/get/all/user`, {\n      headers: {\n        'Authorization': localStorage.getItem(\"JWT\")\n      }\n    });\n  }\n\n  retrieveProject(id) {\n    console.log(\"look here it is?? \", localStorage.getItem(\"JWT\"));\n    let config = {\n      headers: {\n        'Authorization': localStorage.getItem(\"JWT\")\n      },\n      params: {\n        id: id\n      }\n    };\n    return axios.get(`${PROJECT_API_URL}/get`, config);\n  }\n\n  createNewProject(project) {\n    return axios.post(`${PROJECT_API_URL}/add/new`, project, {\n      headers: {\n        'Authorization': localStorage.getItem(\"JWT\")\n      }\n    });\n  } // STAFF\n\n\n  retrieveStaff(projectId) {\n    let config = {\n      headers: {\n        'Authorization': localStorage.getItem(\"JWT\")\n      },\n      params: {\n        projectId: projectId\n      }\n    };\n    return axios.get(`${PROJECT_API_URL}/staff/all`, config);\n  }\n\n  addStaffToProject(unit) {\n    return axios.post(`${PROJECT_API_URL}/staff/new`, {\n      headers: {\n        'Authorization': localStorage.getItem(\"JWT\")\n      }\n    });\n  } // STAFF\n\n\n  createNewUnit(unit) {\n    return axios.post(`${PROJECT_API_URL}/unit/new`, unit, {\n      headers: {\n        'Authorization': localStorage.getItem(\"JWT\")\n      }\n    });\n  }\n\n  retrieveUnitOverview(projectId) {\n    let config = {\n      headers: {\n        'Authorization': localStorage.getItem(\"JWT\")\n      },\n      params: {\n        projectId: projectId\n      }\n    };\n    return axios.get(`${PROJECT_API_URL}/unit/get/overview`, config);\n  }\n\n  retrieveUnit(unitId, projectId) {\n    let config = {\n      headers: {\n        'Authorization': localStorage.getItem(\"JWT\")\n      },\n      params: {\n        unitId: unitId,\n        projectId: projectId\n      }\n    };\n    return axios.get(`${PROJECT_API_URL}/unit/get`, config);\n  }\n\n}\n\nexport default new ProjectService();","map":{"version":3,"sources":["/Users/garrettchristian/DocumentsDesktop/csSeniorYear/isTHEA/budget_estimate_front_end/src/service/ProjectService.jsx"],"names":["axios","config","url","API_URL","PROJECT_API_URL","ProjectService","retrieveAllProjects","get","headers","localStorage","getItem","retrieveProject","id","console","log","params","createNewProject","project","post","retrieveStaff","projectId","addStaffToProject","unit","createNewUnit","retrieveUnitOverview","retrieveUnit","unitId"],"mappings":"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","sourcesContent":["// ShowService.jsx\nimport axios from 'axios'\nimport { config } from './Constants'\n\nvar url = config.url.API_URL\n\nconst PROJECT_API_URL = `${url}/project`\n\nclass ProjectService {\n\n  retrieveAllProjects() {\n      return axios.get(`${PROJECT_API_URL}/get/all/user`, {\n          headers: {\n            'Authorization': localStorage.getItem(\"JWT\")\n          }\n        }\n      );\n  }\n\n  retrieveProject(id) {\n      console.log(\"look here it is?? \", localStorage.getItem(\"JWT\"))\n      let config = {\n        headers: {'Authorization': localStorage.getItem(\"JWT\")},\n        params: {\n          id: id\n        },\n      }\n\n      return axios.get(`${PROJECT_API_URL}/get`, config);\n  }\n\n  createNewProject(project) {\n      return axios.post(`${PROJECT_API_URL}/add/new`, project, {\n          headers: {\n            'Authorization':  localStorage.getItem(\"JWT\")\n          }\n        }\n      );\n  }\n\n  // STAFF\n\n  retrieveStaff(projectId) {\n    let config = {\n      headers: {'Authorization': localStorage.getItem(\"JWT\")},\n      params: {\n        projectId: projectId\n      },\n    }\n\n    return axios.get(`${PROJECT_API_URL}/staff/all`, config);\n  }\n\n  addStaffToProject(unit) {\n    return axios.post(`${PROJECT_API_URL}/staff/new`, {\n        headers: {\n          'Authorization':  localStorage.getItem(\"JWT\")\n        }\n      }\n    );\n  }\n\n  // STAFF\n\n  createNewUnit(unit) {\n    return axios.post(`${PROJECT_API_URL}/unit/new`, unit, {\n        headers: {\n          'Authorization':  localStorage.getItem(\"JWT\")\n        }\n      }\n    );\n  }\n\n  retrieveUnitOverview(projectId) {\n    let config = {\n      headers: {'Authorization': localStorage.getItem(\"JWT\")},\n      params: {\n        projectId: projectId\n      },\n    }\n\n    return axios.get(`${PROJECT_API_URL}/unit/get/overview`, config);\n  }\n\n  retrieveUnit(unitId, projectId) {\n    let config = {\n      headers: {'Authorization': localStorage.getItem(\"JWT\")},\n      params: {\n        unitId: unitId,\n        projectId: projectId\n      },\n    }\n\n    return axios.get(`${PROJECT_API_URL}/unit/get`, config);\n  }\n\n}\n\nexport default new ProjectService()"]},"metadata":{},"sourceType":"module"}