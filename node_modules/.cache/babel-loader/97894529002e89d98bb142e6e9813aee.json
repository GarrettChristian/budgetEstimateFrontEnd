{"ast":null,"code":"// ShowService.jsx\nimport axios from 'axios';\nimport { config } from './Constants';\nvar url = config.url.API_URL;\nconst PROJECT_API_URL = `${url}/project`;\n\nclass ProjectService {\n  retrieveAllProjects() {\n    return axios.get(`${PROJECT_API_URL}/get/all/user`, {\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    });\n  }\n\n  retrieveProject(id) {\n    let config = {\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      },\n      params: {\n        id: id\n      }\n    };\n    return axios.get(`${PROJECT_API_URL}/get`, config);\n  }\n\n  createNewProject(project) {\n    let config = {\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    };\n    return axios.post(`${PROJECT_API_URL}/add/new`, project, config);\n  }\n\n  deleteProject(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    };\n    return axios.delete(`${PROJECT_API_URL}/delete`, config);\n  } // STAFF\n\n\n  retrieveStaff(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    };\n    return axios.get(`${PROJECT_API_URL}/staff/all`, config);\n  }\n\n  addStaffToProject(username, projectId, owner) {\n    let config = {\n      params: {\n        username: username,\n        projectId: projectId,\n        owner: owner\n      },\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    };\n    return axios.post(`${PROJECT_API_URL}/staff/new`, {}, config);\n  }\n\n  isOwner(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    };\n    return axios.get(`${PROJECT_API_URL}/owner`, config);\n  } // UNIT\n\n\n  createNewUnit(unit) {\n    return axios.post(`${PROJECT_API_URL}/unit/new`, unit, {\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    });\n  }\n\n  retrieveUnitOverview(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    };\n    return axios.get(`${PROJECT_API_URL}/unit/get/overview`, config);\n  }\n\n  retrieveUnit(unitId, projectId) {\n    let config = {\n      params: {\n        unitId: unitId,\n        projectId: projectId\n      },\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    };\n    return axios.get(`${PROJECT_API_URL}/unit/get`, config);\n  }\n\n  deleteUnit(unitId, projectId) {\n    let config = {\n      params: {\n        unitId: unitId,\n        projectId: projectId\n      },\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    };\n    return axios.delete(`${PROJECT_API_URL}/unit/delete`, config);\n  }\n\n  markSubcomponentComplete(complete, subcomponentId) {\n    let config = {\n      params: {\n        complete: complete,\n        subcomponentId: subcomponentId\n      },\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    };\n    return axios.post(`${PROJECT_API_URL}/unit/subcomponent/complete`, {}, config);\n  }\n\n  markAllSubcomponentsComplete(complete, unitId) {\n    let config = {\n      params: {\n        complete: complete,\n        unitId: unitId\n      },\n      headers: {\n        Authorization: localStorage.getItem(\"JWT\")\n      }\n    };\n    return axios.post(`${PROJECT_API_URL}/unit/subcomponents/complete`, {}, config);\n  }\n\n}\n\nexport default new ProjectService();","map":{"version":3,"sources":["/Users/garrettchristian/DocumentsDesktop/csSeniorYear/isTHEA/budget_estimate_front_end/src/service/ProjectService.jsx"],"names":["axios","config","url","API_URL","PROJECT_API_URL","ProjectService","retrieveAllProjects","get","headers","Authorization","localStorage","getItem","retrieveProject","id","params","createNewProject","project","post","deleteProject","projectId","delete","retrieveStaff","addStaffToProject","username","owner","isOwner","createNewUnit","unit","retrieveUnitOverview","retrieveUnit","unitId","deleteUnit","markSubcomponentComplete","complete","subcomponentId","markAllSubcomponentsComplete"],"mappings":"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","sourcesContent":["// ShowService.jsx\nimport axios from 'axios'\nimport { config } from './Constants'\n\nvar url = config.url.API_URL\n\nconst PROJECT_API_URL = `${url}/project`\n\nclass ProjectService {\n\n  retrieveAllProjects() {\n      return axios.get(`${PROJECT_API_URL}/get/all/user`, {\n          headers: {\n            Authorization: localStorage.getItem(\"JWT\")\n          }\n        }\n      );\n  }\n\n  retrieveProject(id) {\n      let config = {\n        headers: {Authorization: localStorage.getItem(\"JWT\")},\n        params: {\n          id: id\n        },\n      }\n\n      return axios.get(`${PROJECT_API_URL}/get`, config);\n  }\n\n  createNewProject(project) {\n    let config = {\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.post(`${PROJECT_API_URL}/add/new`, project, config);\n  }\n\n  deleteProject(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")}\n    }\n\n    return axios.delete(`${PROJECT_API_URL}/delete`, config);\n  }\n\n  // STAFF\n\n  retrieveStaff(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.get(`${PROJECT_API_URL}/staff/all`, config);\n  }\n\n  addStaffToProject(username, projectId, owner) {\n    let config = {\n      params: {\n        username: username,\n        projectId: projectId,\n        owner: owner\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.post(`${PROJECT_API_URL}/staff/new`, {}, config);\n  }\n\n  isOwner(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.get(`${PROJECT_API_URL}/owner`, config);\n  }\n\n  // UNIT\n\n  createNewUnit(unit) {\n    return axios.post(`${PROJECT_API_URL}/unit/new`, unit, {\n        headers: {\n          Authorization:  localStorage.getItem(\"JWT\")\n        }\n      }\n    );\n  }\n\n  retrieveUnitOverview(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.get(`${PROJECT_API_URL}/unit/get/overview`, config);\n  }\n\n  retrieveUnit(unitId, projectId) {\n    let config = {\n      params: {\n        unitId: unitId,\n        projectId: projectId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.get(`${PROJECT_API_URL}/unit/get`, config);\n  }\n\n  deleteUnit(unitId, projectId) {\n    let config = {\n      params: {\n        unitId: unitId,\n        projectId: projectId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")}\n    }\n\n    return axios.delete(`${PROJECT_API_URL}/unit/delete`, config);\n  }\n\n  markSubcomponentComplete(complete, subcomponentId) {\n    let config = {\n      params: {\n        complete: complete,\n        subcomponentId: subcomponentId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.post(`${PROJECT_API_URL}/unit/subcomponent/complete`, {}, config);\n  }\n\n  markAllSubcomponentsComplete(complete, unitId) {\n    let config = {\n      params: {\n        complete: complete,\n        unitId: unitId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.post(`${PROJECT_API_URL}/unit/subcomponents/complete`, {}, config);\n  }\n\n}\n\nexport default new ProjectService()"]},"metadata":{},"sourceType":"module"}