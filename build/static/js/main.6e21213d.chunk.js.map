{"version":3,"sources":["service/Constants.js","service/AuthenticationService.jsx","component/NavigationBar.jsx","component/LoginComponent.jsx","component/AboutComponent.jsx","component/AddUserComponent.jsx","component/LogoutComponent.jsx","service/ProjectService.jsx","component/ProjectCardComponent.jsx","component/ListProjectsComponent.jsx","component/AuthenticatedRoute.jsx","component/AddProjectComponent.jsx","component/SummaryComponent.jsx","component/UnitsComponent.jsx","component/AddUnitComponent.jsx","component/UnitComponent.jsx","component/StaffComponent.jsx","component/ProjectDetailsComponent.jsx","component/BudgetApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["config","url","API_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","newAccount","console","log","axios","post","username","password","token","sessionStorage","setItem","this","createJWTToken","localStorage","getItem","removeItem","user","get","headers","Authorization","NavigationBar","props","state","isLoggedIn","AuthenticationService","isUserLoggedIn","prevProps","location","pathname","setState","Navbar","bg","variant","Brand","href","Nav","className","Link","Collapse","Row","Text","getLoggedInUserName","onClick","logout","Component","withRouter","LoginComponent","showErrorMessage","errorMessage","handleChange","bind","loginClicked","event","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","history","push","catch","Container","Col","xs","Form","Group","controlId","Label","Control","type","placeholder","onChange","Button","size","block","role","AboutComponent","sm","AddUserComponent","firstName","lastName","passwordConfirm","createClicked","account","creatAccount","success","login","id","muted","class","LogoutComponent","PROJECT_API_URL","params","project","projectId","owner","unit","unitId","ProjectCardComponent","date","moment","createdDate","format","cardClicked","uniqueId","venue","estimateType","ListProjectsComponent","projects","message","refreshProjects","createProjectClicked","projectClicked","ProjectService","retrieveAllProjects","length","map","AuthenticatedRoute","to","AddProjectComponent","projectName","writer","director","designer","technicalDirector","cancelClicked","createNewProject","md","as","column","SummaryComponent","retrieveProject","match","UnitsComponent","units","totals","stuff","refreshUnits","retrieveUnitOverview","addUnitClicked","Table","striped","bordered","hover","unitClicked","build","loadIn","materials","ProgressBar","now","completion","label","buildTotal","loadInTotal","materialsTotal","AddUnitComponent","removeBuildItemClicked","index","buildItems","splice","removeLoadInItemClicked","loadInItems","removeMaterialClicked","unitName","unitDescription","goBack","unitSubcomponents","concat","description","subcomponents","createNewUnit","workHours","numberOfCrew","item","vendor","cost","amountRequired","handleBuildNameChange","handleBuildWorkHoursChange","handleBuildNumberofCrewChange","handleBuildDescriptionChange","addBuildItemClicked","handleLoadInNameChange","handleLoadInWorkHoursChange","handleLoadInNumberofCrewChange","handleLoadInDescriptionChange","addLoadInItemClicked","handleMaterialNameChange","handleMaterialVendorChange","handleMaterialCostChange","handleMaterialAmountChange","addMaterialClicked","addClicked","UnitComponent","loadInList","buildList","refreshUnit","retrieveUnit","filter","subcom","deleteUnitClicked","markAllFinishedClicked","material","StaffComponent","staff","showModal","refreshStaff","toggle","addStaffClicked","retrieveStaff","addStaffToProject","Modal","show","ModalHeader","closeButton","ModalTitle","ModalBody","Check","ModalFooter","ProjectDetailsComponent","key","handleSelect","handleSelectSummary","refreshOwner","isOwner","selctedKey","path","justify","defaultActiveKey","activeKey","Item","eventKey","onSelect","exact","component","BudgetApp","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e21213d.chunk.js","sourcesContent":["// Constants.js\n// following: https://medium.com/@a.carreras.c/development-and-production-variables-for-react-apps-c04af8b430a5\n\nconst production = {\n    url: {\n        API_URL: \"https://thea-budget-estimate.herokuapp.com\" // TODO fix\n    }\n};\n\nconst dev = {\n    url: {\n        API_URL: \"http://localhost:8080\"\n    }\n};\n\nexport const config = process.env.NODE_ENV === \"development\" ? dev: production;","// AuthenticationService.jsx\n// following https://www.springboottutorial.com/spring-boot-react-full-stack-with-spring-security-basic-and-jwt-authentication\nimport axios from 'axios'\nimport { config } from './Constants'\n\nvar url = config.url.API_URL\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n// export const USER_FIRST_AND_LAST_SESSION_ATTIRBUTE = 'user'\n\nclass AuthenticationService {\n\n    creatAccount(newAccount) {\n        console.log(\"create account\")\n        return axios.post(`${url}/new/user`, newAccount)\n    }\n\n    executeJwtAuthenticationService(username, password) {\n        console.log(username);\n        return axios.post(`${url}/authenticate`, {\n            username,\n            password\n        })\n    }\n\n    registerSuccessfulLoginForJwt(username, token) {\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n        console.log(this.createJWTToken(token))\n        // this.setupAxiosInterceptors(this.createJWTToken(token))\n        localStorage.setItem(\"JWT\", this.createJWTToken(token))\n        console.log(\"stored \", this.createJWTToken(token))\n        console.log(\"and it's right here \", localStorage.getItem(\"JWT\"))\n\n    }\n\n    createJWTToken(token) {\n        return 'Bearer ' + token\n    }\n\n    logout() {\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n    }\n\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return false\n        return true\n    }\n\n    getLoggedInUserName() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return ''\n        return user\n    }\n\n    // setupAxiosInterceptors(token) {\n    //     axios.interceptors.request.use(\n    //         (config) => {\n    //             if (this.isUserLoggedIn()) {\n    //                 config.headers.authorization = token\n    //                 console.log(config.headers.authorization)\n    //             }\n    //             return config\n    //         }\n    //     )\n    // }\n\n    getLoggedInUsersNameFirstLast() {\n        return axios.get(`${url}/users/name`, {\n            headers: {\n              Authorization:  localStorage.getItem(\"JWT\")\n            }\n        })\n    }\n\n    // registerFirstAndLastName(name) {\n    //     sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, name)\n    // }\n\n    // getLoggedInUsersNameFirstLastFromStored() {\n    //     let user = sessionStorage.getItem(USER_FIRST_AND_LAST_SESSION_ATTIRBUTE)\n    //     if (user === null) return ''\n    //     return user\n    // }\n\n}\n\nexport default new AuthenticationService()","import React, { Component } from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Row from 'react-bootstrap/Row'\nimport AuthenticationService from '../service/AuthenticationService'\nimport {withRouter} from 'react-router-dom';\n\nclass NavigationBar extends Component{\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoggedIn : AuthenticationService.isUserLoggedIn()\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            var isUserLoggedIn = AuthenticationService.isUserLoggedIn()\n            this.setState({isLoggedIn: isUserLoggedIn})\n        }\n    }\n    \n    render() {\n\n        return(\n            <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"/\">Budget Tracker</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/projects\">Projects</Nav.Link>\n                <Nav.Link href=\"/about\">About</Nav.Link>\n                </Nav>\n                \n                    {this.state.isLoggedIn ? // logged in\n                        <Navbar.Collapse className=\"justify-content-end\">\n                        <Row>\n                            <Nav className=\"mr-auto\">\n                            <Navbar.Text>\n                                Signed in as: {AuthenticationService.getLoggedInUserName()}\n                            </Navbar.Text>\n                        \n                            <Nav.Link href=\"/logout\" onClick={AuthenticationService.logout}>\n                                Logout</Nav.Link>\n                            </Nav>\n                        </Row>\n                        </Navbar.Collapse>\n                    : // not logged in\n                        <Navbar.Collapse className=\"justify-content-end\">\n                        <Row>\n                            <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"/login\">Login</Nav.Link>\n                            <Nav.Link href=\"/new/user\">Create Account</Nav.Link>\n                            </Nav>\n                        </Row>\n                        </Navbar.Collapse>\n                    }\n                \n            </Navbar>\n            </>\n        )\n    }\n}\n\nexport default withRouter(NavigationBar)","import React, { Component } from 'react'\nimport AuthenticationService from '../service/AuthenticationService'\nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n            showErrorMessage: false,\n            errorMessage: 'Login Error'\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    loginClicked() {\n        // if(this.state.username==='user' && this.state.password==='password'){\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n        //     this.setState({showSuccessMessage:true})\n        //     this.setState({hasLoginFailed:false})\n        // }\n        // else {\n        //      this.setState({showSuccessMessage:false})\n        //      this.setState({hasLoginFailed:true})\n        // }\n        AuthenticationService\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                console.log(\"here???\")\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                console.log(\"here 22???\")\n                this.props.history.push(`/projects`)\n                console.log(\"here 23???\")\n            }).catch(() => {\n                this.setState({ showErrorMessage: true })\n                this.setState({ errorMessage: 'Login Error' })\n            })\n    }\n\n    render() {\n        return (\n            <Container>\n\n                <Row>\n                    <Col xs={3}/>\n\n                    <Col className=\"mt-5 border-custom\">\n                        <h2>Login</h2>\n\n                        <Form>\n                            <Form.Group controlId=\"formGroupEmail\">\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" \n                                name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formGroupPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\"\n                                name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                            </Form.Group>\n                            \n                            <Button variant=\"primary\" size=\"md\" block onClick={this.loginClicked}>Submit</Button>\n\n                            <p className=\"forgot-password text-right\">\n                                <a href=\"new/user/\">Create Account</a>\n                            </p>\n\n                            { this.state.showErrorMessage && // login error message\n                            <div className=\"alert alert-warning\" role=\"alert\">{this.state.errorMessage}</div>\n                            }\n                        </Form>\n\n                        \n\n                    </Col>\n\n                    <Col xs={3}/>\n                </Row>\n                \n            </Container>\n\n        )\n    }\n}\n\nexport default LoginComponent","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass AboutComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    render() {\n        console.log('render')\n        return (\n            <Container className=\"mt-3\">\n\n                <h1>About</h1>\n                <p className=\"ml-3 text-wrap\">Created By: Garrett Christian</p>\n\n                <h2>Why</h2>\n                <Col className=\"ml-3 text-wrap\">\n                    <Row>\n                        <p>\n                            Created for my James Madison University theater independent study course with Professor Smallwood. \n                            The course's goal was to explore how the \n                            software engineering development cycle can be applied to a \n                            theater problem. Specifically to create an application for tracking worker hours on theatrical projects.\n                        </p>\n                    </Row>\n                </Col>\n\n                <h2>Where to find the code</h2>\n                <Col className=\"ml-3 text-wrap\">\n                    <Row>\n                        <Col sm={2}>\n                            <p>Front End:</p>\n                        </Col>\n                        <Col sm={10}>\n                            <a className=\"text-wrap\" href=\"https://github.com/GarrettChristian/budget_estimate_front_end\">\n                            https://github.com/GarrettChristian/budget_estimate_front_end</a>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={2}>\n                            <p>Back End:</p>\n                        </Col>\n                        <Col sm={10}>\n                            <a href=\"https://github.com/GarrettChristian/BudgetEstimate\">\n                            https://github.com/GarrettChristian/BudgetEstimate</a>\n                        </Col>\n                    </Row>\n                </Col>\n            </Container>\n        )\n    }\n}\n\nexport default AboutComponent","import React, { Component } from 'react'\nimport AuthenticationService from '../service/AuthenticationService';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass AddUserComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            username: '',\n            password: '',\n            passwordConfirm: '',\n            showErrorMessage: false,\n            errorMessage: 'Error Creating Your Account'\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.createClicked = this.createClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {[event.target.name]: event.target.value}\n        )\n    }\n\n    createClicked() {\n\n        var account = {\n            username: this.state.username,\n            password: this.state.password,\n            firstName: this.state.firstName,\n            lastName: this.state.lastName\n        }\n\n        AuthenticationService\n            .creatAccount(account)\n            .then((response) => {\n                if (response.data.success) {\n                    this.setState({ showErrorMessage: false })\n                    this.login()\n                } else {\n                    this.setState({ showErrorMessage: true })\n                    this.setState({errorMessage: \"Account creation failed\"})\n                }\n                \n            }).catch(() => {\n                this.setState({ showErrorMessage: true })\n                this.setState({errorMessage: \"Account creation failed\"})\n            })\n    }\n\n    login() {\n        AuthenticationService\n        .executeJwtAuthenticationService(this.state.username, this.state.password)\n        .then((response) => {\n            AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n            this.props.history.push(`/projects`)\n        }).catch(() => {\n            this.setState({ showErrorMessage: true })\n            this.setState({errorMessage: \"Account creation failed to login\"})\n        })\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col sm={2}/>\n\n                    <Col className=\"mt-5 border-custom\">\n                        <h2>Create Account</h2>\n                        <Form>\n                            \n                            {/* Name First and Last */}\n                            <Row>\n                                <Col>\n                                <Form.Group controlId=\"formGroupFirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"First Name\" \n                                    name=\"firstName\" value={this.state.firstName} onChange={this.handleChange}/>\n                                </Form.Group>\n                                </Col>\n\n                                <Col>\n                                <Form.Group controlId=\"formGroupLastName\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Last Name\" \n                                    name=\"lastName\" value={this.state.lastName} onChange={this.handleChange}/>\n                                </Form.Group>\n                                </Col>\n                            </Row>\n\n                            {/* Email */}\n                            <Form.Group controlId=\"formGroupEmail\">\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"Email\" \n                                name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                            </Form.Group>\n\n                            {/* Password  */}\n                            <Row>\n                                <Col>\n                                <Form.Group controlId=\"formGroupPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Password\" \n                                    name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                                </Form.Group>\n                                </Col>\n\n                                <Col>\n                                <Form.Group controlId=\"formGroupPasswordConfirm\">\n                                    <Form.Label>Confirm Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Confirm Password\" \n                                    name=\"passwordConfirm\" value={this.state.passwordConfirm} onChange={this.handleChange}/>\n                                </Form.Group>\n                                </Col>\n                            </Row>\n\n                            <Form.Text id=\"passwordHelpBlock\" muted>\n                                Your password must be 8-20 characters long, contain letters and numbers, and\n                                must not contain spaces, special characters, or emoji.\n                            </Form.Text>\n\n                        </Form>\n\n                        <Button type=\"submit\" block onClick={this.createClicked}>Submit</Button>\n\n                        { this.state.showErrorMessage && // Account creation error\n                        <div class=\"alert alert-warning\" role=\"alert\">{this.state.errorMessage}</div>\n                        }\n\n                    </Col>\n\n                    <Col sm={2}/>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default AddUserComponent","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\nclass LogoutComponent extends Component {\n    \n    render() {\n        return (\n            <Container className=\"mt-3\">\n                <Row>\n                    <h1>You are logged out</h1>\n                </Row>\n                    \n                <Row>\n                    <p>Thank You for Using The Budget Tracker.</p>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default LogoutComponent","// ShowService.jsx\nimport axios from 'axios'\nimport { config } from './Constants'\n\nvar url = config.url.API_URL\n\nconst PROJECT_API_URL = `${url}/project`\n\nclass ProjectService {\n\n  retrieveAllProjects() {\n      return axios.get(`${PROJECT_API_URL}/get/all/user`, {\n          headers: {\n            Authorization: localStorage.getItem(\"JWT\")\n          }\n        }\n      );\n  }\n\n  retrieveProject(id) {\n      console.log(\"look here it is?? \", localStorage.getItem(\"JWT\"))\n      let config = {\n        headers: {Authorization: localStorage.getItem(\"JWT\")},\n        params: {\n          id: id\n        },\n      }\n\n      return axios.get(`${PROJECT_API_URL}/get`, config);\n  }\n\n  createNewProject(project) {\n    let config = {\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.post(`${PROJECT_API_URL}/add/new`, project, config);\n  }\n\n  // STAFF\n\n  retrieveStaff(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.get(`${PROJECT_API_URL}/staff/all`, config);\n  }\n\n  addStaffToProject(username, projectId, owner) {\n    let config = {\n      params: {\n        username: username,\n        projectId: projectId,\n        owner: owner\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.post(`${PROJECT_API_URL}/staff/new`, {}, config);\n  }\n\n  isOwner(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.get(`${PROJECT_API_URL}/owner`, config);\n  }\n\n  // UNIT\n\n  createNewUnit(unit) {\n    return axios.post(`${PROJECT_API_URL}/unit/new`, unit, {\n        headers: {\n          Authorization:  localStorage.getItem(\"JWT\")\n        }\n      }\n    );\n  }\n\n  retrieveUnitOverview(projectId) {\n    let config = {\n      params: {\n        projectId: projectId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.get(`${PROJECT_API_URL}/unit/get/overview`, config);\n  }\n\n  retrieveUnit(unitId, projectId) {\n    let config = {\n      params: {\n        unitId: unitId,\n        projectId: projectId\n      },\n      headers: {Authorization: localStorage.getItem(\"JWT\")},\n    }\n\n    return axios.get(`${PROJECT_API_URL}/unit/get`, config);\n  }\n\n}\n\nexport default new ProjectService()","import React, { Component } from 'react'\nimport moment from 'moment'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass ProjectCardComponent extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            project: props.project\n        }\n    }\n\n    render() {\n                \n        const date = moment(this.state.project.createdDate).format('MMM DD, YYYY');\n        \n        return (\n            <Container className=\"mt-2 border-custom-card bg-light\" \n            onClick={() => this.props.cardClicked(this.state.project.uniqueId)}>\n\n                {/* Project Name and Venue */}\n                <Row>\n                    <Col xs={1}/>\n                    <Col xs={6}>\n                        <h4>{this.state.project.name}</h4>\n                    </Col>\n                    <Col xs={4}>\n                        <h5 className=\"text-right\">{this.state.project.venue}</h5>\n                    </Col>\n                    <Col xs={1}/>\n                </Row>\n\n                {/* Type and Created Date */}\n                <Row>\n                    <Col xs={1}/>\n                    <Col xs={6}>\n                        <p>{this.state.project.estimateType} Estimate</p>\n                    </Col>\n                    <Col xs={4}>\n                        <p className=\"text-right\">Created: {date}</p>\n                    </Col>\n                    <Col xs={1}/>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default ProjectCardComponent","import React, { Component } from 'react'\nimport ProjectService from '../service/ProjectService.jsx'\nimport ProjectCardComponent from './ProjectCardComponent'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass ListProjectsComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            // name: 'Current User',\n            projects: [],\n            message: null\n        }\n        this.refreshProjects = this.refreshProjects.bind(this)\n        // this.getName = this.getName.bind(this)\n        this.createProjectClicked = this.createProjectClicked.bind(this)\n        this.projectClicked = this.projectClicked.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshProjects();\n        // this.getName();\n    }\n\n    refreshProjects() {\n        ProjectService.retrieveAllProjects()\n            .then(\n                response => {\n                    this.setState({ projects: response.data })\n                }\n            )\n    }\n\n    createProjectClicked() {\n        this.props.history.push(`/projects/create`)\n    }\n\n    projectClicked(projectId) {\n        console.log(projectId)\n        this.props.history.push({\n            pathname: '/project/' + \n            projectId,\n        })\n    }\n\n    render() {\n        console.log('render')\n        return (\n            <Container className=\"mt-3\">\n\n                {/* Title Area */}\n                <Row className=\"border-bottom-custom\">\n                    <Col xs={8}>\n                        <h3>Project Budget Tracker</h3>\n                    </Col> \n                </Row>\n\n                {/* Create New Project Button */}\n                <Row className=\"mt-3 mb-3\">\n                    <Col xs={3}/>\n                    <Col xs={7}>\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\" \n                        onClick={this.createProjectClicked}>Create a New Project</button>\n                    </Col>\n                    <Col xs={3}/>\n                </Row>\n\n                <h3>Your Projects:</h3>\n                <Container>\n                    { this.state.projects.length === 0 ? ( //If there are no projects dont display this section\n                        <div>\n                        <p>No Projects Currrently...</p>\n                        <p>Create a New Project to Start Budgeting!</p>\n                        </div>\n                    ) : (\n                        this.state.projects.map(\n                            project =>\n                                <ProjectCardComponent cardClicked={this.projectClicked} project={project}>\n                                </ProjectCardComponent>\n                        )\n                    )}  \n                </Container>\n            </Container>\n        )\n    }\n}\n\nexport default ListProjectsComponent","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthenticationService from '../service/AuthenticationService';\n\nclass AuthenticatedRoute extends Component {\n    render() {\n        if (AuthenticationService.isUserLoggedIn()) {\n            return <Route {...this.props} />\n        } else {\n            return <Redirect to=\"/login\" />\n        }\n\n    }\n}\n\nexport default AuthenticatedRoute","import React, { Component } from 'react'\nimport ProjectService from '../service/ProjectService';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass AddProjectComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            projectName: '',\n            venue: '',\n            writer: '',\n            director: '',\n            designer: '',\n            technicalDirector: '',\n            estimateType: '',\n            passwordConfirm: '',\n            showErrorMessage: false,\n            errorMessage: 'Error Creating the Project'\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.createClicked = this.createClicked.bind(this)\n        this.cancelClicked = this.cancelClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {[event.target.name]: event.target.value}\n        )\n    }\n\n    createClicked() {\n        console.log(\"creating?\")\n\n        var project = {\n            name: this.state.projectName,\n            venue: this.state.venue,\n            writer: this.state.writer,\n            director: this.state.director,\n            designer: this.state.designer,\n            technicalDirector: this.state.technicalDirector,\n            estimateType: this.state.estimateType\n        }\n\n        console.log(project)\n\n        ProjectService\n            .createNewProject(project)\n            .then((response) => {\n                if (response.data.success) {\n                    console.log(\"project success\")\n                    this.setState({ showErrorMessage: false })\n                    this.props.history.push('/projects')\n                } else {\n                    console.log(\"project creation failed\")\n                    this.setState({ showErrorMessage: true })\n                    this.setState({errorMessage: \"Project creation failed\"})\n                }\n                \n            }).catch(() => {\n                console.log(\"project creation failed\")\n                this.setState({ showErrorMessage: true })\n                this.setState({errorMessage: \"Project creation failed\"})\n            })\n     \n    }\n\n    cancelClicked() {\n        this.props.history.push('/projects')\n    }\n\n    render() {\n        return (\n            <Container className=\"mt-3\">\n\n                <Row>\n                    <Col xs={1}/>\n\n                    <Col md={10}>\n                        <h2>Create New Project</h2>\n\n                        {/* Project Name */}\n                        <Form>\n                            <Form.Group as={Row} controlId=\"projectName\">\n                                <Form.Label column sm={2}>Project Name</Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control type=\"text\" placeholder=\"Project Name\"\n                                    name=\"projectName\" value={this.state.projectName} onChange={this.handleChange}/>\n                                </Col>\n                            </Form.Group>\n\n                            <Row>\n                                <Col>\n                                    <Form.Group controlId=\"estimateType\">\n                                        <Form.Label>Estimate Type</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"Scenic\" \n                                        name=\"estimateType\" value={this.state.estimateType} onChange={this.handleChange} />\n                                    </Form.Group>\n                                </Col>\n\n                                <Col>\n                                    <Form.Group controlId=\"venue\">\n                                        <Form.Label>Venue</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"Venue\" \n                                        name=\"venue\" value={this.state.venue} onChange={this.handleChange} />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                    \n                            <Row>\n                                <Col>\n                                    <Form.Group controlId=\"director\">\n                                        <Form.Label>Director</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"Director\" \n                                        name=\"director\" value={this.state.director} onChange={this.handleChange} />\n                                    </Form.Group>\n                                </Col>\n\n                                <Col>\n                                    <Form.Group controlId=\"writer\">\n                                        <Form.Label>Writer</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"Writer\" \n                                        name=\"writer\" value={this.state.writer} onChange={this.handleChange} />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                    \n                            <Row>\n                                <Col>\n                                    <Form.Group controlId=\"designer\">\n                                        <Form.Label>Designer</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"Designer\" \n                                        name=\"designer\" value={this.state.designer} onChange={this.handleChange} />\n                                    </Form.Group>\n                                </Col>\n\n                                <Col>\n                                    <Form.Group controlId=\"technicalDirector\">\n                                        <Form.Label>Technical Director</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"Technical Director\" \n                                        name=\"technicalDirector\" value={this.state.technicalDirector} onChange={this.handleChange} />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                        \n                            <Row>\n                                <Col>\n                                    <Button type=\"cancel\" variant=\"secondary\" block onClick={this.cancelClicked}>Cancel</Button>\n                                </Col>\n                                <Col xs={4}/>\n                                <Col>\n                                    <Button block onClick={this.createClicked}>Create</Button>\n                                </Col>\n                            </Row>\n\n                        </Form>\n\n                        { this.state.showErrorMessage && // show creation error\n                        <div className=\"alert alert-warning\" role=\"alert\">{this.state.errorMessage}</div>\n                        }\n\n                    </Col>\n                    <Col xs={1}/>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default AddProjectComponent","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport ProjectService from '../service/ProjectService.jsx'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass SummaryComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            project: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {[event.target.name]: event.target.value}\n        )\n    }\n\n    componentDidMount() {\n        this.refreshProjects();\n    }\n\n    refreshProjects() {\n        ProjectService.retrieveProject(this.props.match.params.id)\n            .then(\n                response => {\n                    this.setState({ project: response.data })\n                }\n            )\n    }\n\n    render() {\n        return (\n            <Container className=\"mt-3\">\n\n                \n                <h2>{this.state.project.name}</h2>\n\n                <Row className=\"mt-2 border-bottom-custom\">\n                    <Col>\n                        <h3>{this.state.project.estimateType} Estimate</h3>\n                    </Col>\n                    <Col>\n                        <h3 className=\"text-right\">{this.state.project.venue}</h3>\n                    </Col>\n                </Row>\n\n                <Row className=\"mt-2\">\n                    <Col xs={3}>\n                        <h4>Written by: </h4>\n                    </Col>\n                    <Col>\n                        <p>{this.state.project.writer}</p>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xs={3}>\n                        <h4>Director: </h4>\n                    </Col>\n                    <Col>\n                        <p>{this.state.project.director}</p>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xs={3}>\n                        <h4>Set Designer: </h4>\n                    </Col>\n                    <Col>\n                        <p>{this.state.project.designer}</p>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xs={3}>\n                        <h4>Technical Director: </h4>\n                    </Col>\n                    <Col>\n                        <p>{this.state.project.technicalDirector}</p>\n                    </Col>\n                </Row>\n\n            </Container>\n        )\n    }\n}\n\nexport default SummaryComponent","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport {withRouter} from \"react-router-dom\"\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ProjectService from '../service/ProjectService.jsx'\n\nclass UnitsComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            units: [],\n            totals: '',\n            stuff: '',\n            owner: this.props.location.state.owner\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.refreshUnits = this.refreshUnits.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshUnits();\n    }\n\n\n    refreshUnits() {\n        console.log(\"Refershing this shows units \" + this.props.match.params.id)\n\n        ProjectService.retrieveUnitOverview(this.props.match.params.id)\n        .then(\n            response => {\n                console.log(response)\n                console.log(response.data)\n                this.setState({totals: response.data})\n                this.setState({units: response.data.units})\n            }\n        )\n    }\n\n    handleChange(event) {\n        this.setState(\n            {[event.target.name]: event.target.value}\n        )\n    }\n\n    addUnitClicked() {\n        // this.props.history.push(`/projects`)\n        this.props.history.push({\n            pathname: 'units/new', \n            state: { unitId: 1},\n        })\n    }\n\n    unitClicked(unit) {\n        this.props.history.push({\n            pathname: 'unit',\n            state: { unitId: unit.id,\n                owner: this.state.owner},\n        })\n    }\n\n    render() {\n        console.log(this.state.owner)\n        return (\n            <Container className=\"mt-3\">\n                \n                <h2 className=\"border-bottom-custom\">Project Units</h2>\n\n                {/* Create New Unit Button */}\n                {this.state.owner && \n                <Row className=\"mt-3\">\n                    <Col xs={2}/>\n                    <Col>\n                        <Button block onClick={this.addUnitClicked.bind(this)}>Add a New Unit</Button>\n                    </Col>\n                    <Col xs={2}/>\n                </Row>\n                }\n\n                <Table className=\"mt-3\" striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>Element</th>\n                        <th>Build (Hours)</th>\n                        <th>Load In (Hours)</th>\n                        <th>Materials</th>\n                        <th>Completion</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.units.map(\n                            unit =>\n                            <tr onClick={this.unitClicked.bind(this, unit)}>\n                            <th>{unit.name}</th>\n                            <td>{unit.build}</td>\n                            <td>{unit.loadIn}</td>\n                            <td>${unit.materials}</td>\n                            <td><ProgressBar striped now={unit.completion} label={`${unit.completion}%`} /></td>\n                            </tr>\n                        )\n                    } \n\n                    <tr>\n                    <th></th>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    </tr>\n\n                    <tr>\n                    <th>Totals</th>\n                    <td>{this.state.totals.buildTotal}</td>\n                    <td>{this.state.totals.loadInTotal}</td>\n                    <td>${this.state.totals.materialsTotal}</td>\n                    <td><ProgressBar striped now={this.state.totals.completion} label={`${this.state.totals.completion}%`} /></td>\n                    </tr>\n                    </tbody>\n                </Table>\n\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(UnitsComponent)","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport ProjectService from '../service/ProjectService.jsx'\n\nclass AddUnitComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            unitName: '',\n            unitDescription: '',\n            buildItems: [],\n            loadInItems: [],\n            materials: [],\n            errorMessage: '',\n            showErrorMessage: false,\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    cancelClicked() {\n        this.props.history.goBack()\n    }\n\n    addClicked() {\n        console.log(\"adding new unit from add unit compoenent \")\n\n        var unitSubcomponents = this.state.buildItems\n        unitSubcomponents = unitSubcomponents.concat(this.state.loadInItems)\n\n        console.log(unitSubcomponents)\n\n        var unit = {\n            name: this.state.unitName,\n            description: this.state.unitDescription,\n            subcomponents: unitSubcomponents,\n            materials: this.state.materials,\n            projectId: this.props.match.params.id\n        }\n\n        console.log(unit)\n        console.log(this.props.match.params.id)\n\n        ProjectService\n            .createNewUnit(unit)\n            .then((response) => {\n                if (response.data.success) {\n                    console.log(\"unit creation success\")\n                    this.setState({ showErrorMessage: false })\n                    this.props.history.goBack()\n                } else {\n                    console.log(\"unit creation failed\")\n                    this.setState({ showErrorMessage: true })\n                    this.setState({errorMessage: \"Project creation failed\"})\n                }\n                \n            }).catch(() => {\n                console.log(\"unit creation error\")\n                this.setState({ showErrorMessage: true })\n                this.setState({errorMessage: \"Project creation failed\"})\n            })\n    }\n\n    handleChange(event) {\n        this.setState(\n            {[event.target.name]: event.target.value}\n        )\n    }\n\n    // BUILD ITEMS \n\n    addBuildItemClicked() {\n        console.log(\"Adding Build item\")\n\n        this.setState(state => {\n\n            var newSubItem = {\n                name: \"\",\n                description: \"\",\n                workHours: \"\",\n                numberOfCrew: \"\",\n                type: \"BUILD\"\n            }\n\n            const buildItems = [...state.buildItems, newSubItem]\n       \n            return {\n                buildItems\n            };\n        });\n    }\n\n    handleBuildNameChange(index, item, event) {\n\n        const buildItems = [...this.state.buildItems];\n\n        item.name = event.target.value \n        buildItems.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            buildItems\n        });\n    };\n\n    handleBuildDescriptionChange(index, item, event) {\n\n        const buildItems = [...this.state.buildItems];\n\n        item.description = event.target.value \n        buildItems.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            buildItems\n        });\n    };\n\n    handleBuildWorkHoursChange(index, item, event) {\n\n        const buildItems = [...this.state.buildItems];\n\n        item.workHours = event.target.value \n        buildItems.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            buildItems\n        });\n    };\n\n    handleBuildNumberofCrewChange(index, item, event) {\n\n        const buildItems = [...this.state.buildItems];\n\n        item.numberOfCrew = event.target.value \n        buildItems.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            buildItems\n        });\n    };\n\n    removeBuildItemClicked = (index) => {\n        \n        const buildItems = [...this.state.buildItems];\n        buildItems.splice(index, 1); // replaces 1 element at specificed index\n        \n        this.setState({\n            buildItems\n        });\n    };\n\n    // LOAD IN ITEMS \n\n    addLoadInItemClicked() {\n        console.log(\"Adding Load In item\")\n\n        this.setState(state => {\n\n            var newSubItem = {\n                name: \"\",\n                description: \"\",\n                workHours: \"\",\n                numberOfCrew: \"\",\n                type: \"LOAD IN\"\n            }\n\n            const loadInItems = [...state.loadInItems, newSubItem]\n       \n            return {\n                loadInItems\n            };\n        });\n    }\n        \n    handleLoadInNameChange(index, item, event) {\n\n        const loadInItems = [...this.state.loadInItems];\n\n        item.name = event.target.value \n        loadInItems.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            loadInItems\n        });\n    };\n\n    handleLoadInDescriptionChange(index, item, event) {\n\n        const loadInItems = [...this.state.loadInItems];\n\n        item.description = event.target.value \n        loadInItems.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            loadInItems\n        });\n    };\n\n    handleLoadInWorkHoursChange(index, item, event) {\n\n        const loadInItems = [...this.state.loadInItems];\n\n        item.workHours = event.target.value \n        loadInItems.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            loadInItems\n        });\n    };\n\n    handleLoadInNumberofCrewChange(index, item, event) {\n\n        const loadInItems = [...this.state.loadInItems];\n\n        item.numberOfCrew = event.target.value \n        loadInItems.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            loadInItems\n        });\n    };\n\n    removeLoadInItemClicked = (index) => {\n        \n        const loadInItems = [...this.state.loadInItems];\n        loadInItems.splice(index, 1); // replaces 1 element at specificed index\n\n        this.setState({\n            loadInItems\n        });\n    };\n\n    // MATERIALS\n\n    addMaterialClicked() {\n\n        this.setState(state => {\n\n            var newSubItem = {\n                name: \"\",\n                description: \"\",\n                vendor: \"\",\n                cost: \"\",\n                amountRequired: \"\"\n            }\n\n            const materials = [...state.materials, newSubItem]\n       \n            return {\n                materials\n            };\n        });\n    }\n        \n    handleMaterialNameChange(index, item, event) {\n\n        const materials = [...this.state.materials];\n\n        item.name = event.target.value \n        materials.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            materials\n        });\n    };\n\n    handleMaterialVendorChange(index, item, event) {\n\n        const materials = [...this.state.materials];\n\n        item.vendor = event.target.value \n        materials.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            materials\n        });\n    };\n\n    handleMaterialCostChange(index, item, event) {\n\n        const materials = [...this.state.materials];\n\n        item.cost = event.target.value \n        materials.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            materials\n        });\n    };\n\n    handleMaterialAmountChange(index, item, event) {\n\n        const materials = [...this.state.materials];\n\n        item.amountRequired = event.target.value \n        materials.splice(index, 1, item); // replaces 1 element at specificed index\n\n        this.setState({\n            materials\n        });\n    };\n\n    removeMaterialClicked = (index) => {\n        \n        const materials = [...this.state.materials];\n        \n        materials.splice(index, 1); // replaces 1 element at specificed index\n        this.setState({\n            materials\n        });\n    };\n\n\n    render() {\n        return (\n            <Container className=\"mt-3\">\n\n                <h2 className=\"border-bottom-custom\">Add Unit</h2>\n\n                <Form className=\"border-bottom-custom\">\n                            \n                    {/* Name First and Last */}\n                    <Form.Group controlId=\"Unit Name\">\n                        <Form.Label>Unit Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Unit Name\" \n                        name=\"unitName\" value={this.state.unitName} onChange={this.handleChange}/>\n                    </Form.Group>\n\n        \n                    <Form.Group controlId=\"Unit Description\">\n                        <Form.Label>Unit Description</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Description for this unit\" \n                        name=\"unitDescription\" value={this.state.unitDescription} onChange={this.handleChange}/>\n                    </Form.Group>\n                   \n                    <h4 className=\"border-bottom-custom\">Build</h4>\n\n                    <div>\n                       {this.state.buildItems.map(\n                           (item, index) => \n                            <div className=\"border-bottom-custom\">\n                            <Row className=\"mt-2\">\n                                <Col xs={5}>\n                                <Form.Group controlId=\"buildItemName\">\n                                    <Form.Control type=\"text\" placeholder=\"Name\" \n                                    name=\"name\" value={item.name} size=\"sm\"\n                                    onChange={this.handleBuildNameChange.bind(this, index, item)}/>\n                                </Form.Group>          \n                                </Col>\n                                <Col xs={3}>\n                                    <Form.Group controlId=\"buildWorkHours\">\n                                        <Form.Control type=\"text\" placeholder=\"Work Hours\" \n                                        name=\"workHours\" value={item.workHours} size=\"sm\"\n                                        onChange={this.handleBuildWorkHoursChange.bind(this, index, item)}/>\n                                    </Form.Group>\n                                </Col>\n                                <Col xs={3}>\n                                    <Form.Group controlId=\"buildNumberOfCrew\">\n                                        <Form.Control type=\"text\" placeholder=\"# of Crew\" \n                                        name=\"numberOfCrew\" value={item.numberOfCrew} size=\"sm\"\n                                        onChange={this.handleBuildNumberofCrewChange.bind(this, index, item)}/>\n                                    </Form.Group>\n                                </Col>\n                                <Col xs={1}>\n                                    <Button variant=\"danger\" onClick={this.removeBuildItemClicked.bind(this, index)}>x</Button>\n                                </Col>\n                            </Row>\n                            <Form.Group controlId=\"buildDescription\">\n                                <Form.Control type=\"text\" placeholder=\"Description\" \n                                name=\"description\" value={item.description} size=\"sm\"\n                                onChange={this.handleBuildDescriptionChange.bind(this, index, item)}/>\n                            </Form.Group>\n                            </div>\n                            )}\n                    </div>\n\n                    <Row className=\"mt-2 mb-2\">\n                        <Col xs={2}/>\n                        <Col>\n                            <Button block onClick={this.addBuildItemClicked.bind(this)}>Add Build Subcomponent</Button>\n                        </Col>\n                        <Col xs={2}/>\n                    </Row>\n\n                    <h4 className=\"border-bottom-custom\">Load in</h4>\n\n                    <div>\n                       {this.state.loadInItems.map(\n                           (item, index) => \n                            <>\n                            <div className=\"border-bottom-custom\">\n                            <Row className=\"mt-2\">\n                                <Col xs={5}>\n                                <Form.Group controlId=\"loadInItemName\">\n                                    <Form.Control type=\"text\" placeholder=\"Name\" \n                                    name=\"name\" value={item.name} size=\"sm\"\n                                    onChange={this.handleLoadInNameChange.bind(this, index, item)}/>\n                                </Form.Group>          \n                                </Col>\n                                <Col xs={3}>\n                                    <Form.Group controlId=\"loadInWorkHours\">\n                                        <Form.Control type=\"text\" placeholder=\"Work Hours\" \n                                        name=\"workHours\" value={item.workHours} size=\"sm\"\n                                        onChange={this.handleLoadInWorkHoursChange.bind(this, index, item)}/>\n                                    </Form.Group>\n                                </Col>\n                                <Col xs={3}>\n                                    <Form.Group controlId=\"loadInNumberOfCrew\">\n                                        <Form.Control type=\"text\" placeholder=\"# of Crew\" \n                                        name=\"numberOfCrew\" value={item.numberOfCrew} size=\"sm\"\n                                        onChange={this.handleLoadInNumberofCrewChange.bind(this, index, item)}/>\n                                    </Form.Group>\n                                </Col>\n                                <Col xs={1}>\n                                    <Button variant=\"danger\" onClick={this.removeLoadInItemClicked.bind(this, index)}>x</Button>\n                                </Col>\n                            </Row>\n                            <Form.Group controlId=\"loadInDescription\">\n                                <Form.Control type=\"text\" placeholder=\"Description\" \n                                name=\"description\" value={item.description} size=\"sm\"\n                                onChange={this.handleLoadInDescriptionChange.bind(this, index, item)}/>\n                            </Form.Group>\n                            </div>\n                            </>\n                            )}\n                    </div>\n\n                    <Row className=\" mt-2 mb-2\">\n                        <Col xs={2}/>\n                        <Col>\n                            <Button block onClick={this.addLoadInItemClicked.bind(this)}>Add Load in Subcomponent</Button>\n                        </Col>\n                        <Col xs={2}/>\n                    </Row>\n\n                    <h4 className=\"border-bottom-custom\">Materials</h4>\n\n                    <div>\n                       {this.state.materials.map(\n                           (item, index) => \n                            <>\n                            <div className=\"border-bottom-custom\">\n                            <Row className=\"mt-2\">\n                                <Col xs={4}>\n                                <Form.Group controlId=\"materialName\">\n                                    <Form.Control type=\"text\" placeholder=\"Name\" \n                                    name=\"name\" value={item.name} size=\"sm\"\n                                    onChange={this.handleMaterialNameChange.bind(this, index, item)}/>\n                                </Form.Group>          \n                                </Col>\n                                <Col xs={3}>\n                                    <Form.Group controlId=\"buildNumberOfCrew\">\n                                        <Form.Control type=\"text\" placeholder=\"Vendor\" \n                                        name=\"numberOfCrew\" value={item.numberOfCrew} size=\"sm\"\n                                        onChange={this.handleMaterialVendorChange.bind(this, index, item)}/>\n                                    </Form.Group>\n                                </Col>\n                                <Col xs={2}>\n                                    <Form.Group controlId=\"materialCost\">\n                                        <Form.Control type=\"text\" placeholder=\"Cost\" \n                                        name=\"cost\" value={item.cost} size=\"sm\"\n                                        onChange={this.handleMaterialCostChange.bind(this, index, item)}/>\n                                    </Form.Group>\n                                </Col>\n                                <Col xs={2}>\n                                    <Form.Group controlId=\"materialAmountRequired\">\n                                        <Form.Control type=\"text\" placeholder=\"Amount\" \n                                        name=\"amountRequired\" value={item.numberOfCrew} size=\"sm\"\n                                        onChange={this.handleMaterialAmountChange.bind(this, index, item)}/>\n                                    </Form.Group>\n                                </Col>\n                                <Col xs={1}>\n                                    <Button variant=\"danger\" onClick={this.removeMaterialClicked.bind(this, index)}>x</Button>\n                                </Col>\n                            </Row>\n                            </div>\n                            </>\n                            )}\n                    </div>\n\n                    <Row className=\"mt-2 mb-2\">\n                        <Col xs={2}/>\n                        <Col>\n                            <Button block onClick={this.addMaterialClicked.bind(this)}>Add Material</Button>\n                        </Col>\n                        <Col xs={2}/>\n                    </Row>\n                    \n\n\n                </Form>\n                \n                \n\n                <Row className=\"mt-3\">\n                    <Col>\n                        <Button variant=\"secondary\" block onClick={this.cancelClicked.bind(this)}>Cancel</Button>\n                    </Col>\n                    <Col xs={4}/>\n                    <Col>\n                        <Button block onClick={this.addClicked.bind(this)}>Add Unit</Button>\n                    </Col>\n                </Row>\n\n            </Container>\n        )\n    }\n}\n\nexport default AddUnitComponent","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport ProjectService from '../service/ProjectService.jsx'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nclass UnitComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            unit: '',\n            loadInList: [],\n            buildList: [],\n            materials: [],\n            owner: this.props.location.state.owner\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {[event.target.name]: event.target.value}\n        )\n    }\n\n    componentDidMount() {\n        this.refreshUnit();\n    }\n\n    refreshUnit() {\n        ProjectService.retrieveUnit(this.props.location.state.unitId, this.props.match.params.id)\n            .then(\n                response => {\n                    this.setState({ unit: response.data })\n                    this.setState({ loadInList:  response.data.subcomponents.filter(subcom => subcom.type === \"LOAD IN\")})\n                    this.setState({ buildList:  response.data.subcomponents.filter(subcom => subcom.type === \"BUILD\")})\n                    this.setState({ materials: response.data.materials })\n                }\n            )\n    }\n\n    deleteUnitClicked() {\n        console.log(\"delete  clicked\")\n        this.props.history.goBack()\n    }\n\n    markAllFinishedClicked() {\n        console.log(\"edit clicked\")\n        // this.props.history.push(`/projects`)\n        // this.props.history.push({\n        //     pathname: 'units/new',\n        //     state: { unitId: 1},\n        // })\n    }\n\n    render() {\n        \n        console.log(this.state.owner)\n        return (\n            <Container className=\"mt-3\">\n\n                <h2 className=\"border-bottom-custom\">{this.state.unit.name}</h2>\n\n                <Row className=\"mt-3\">\n                    <Col xs={6}/>\n                    {this.state.owner ? (\n                    <Col xs={3}>\n                        <Button block variant=\"danger\" onClick={this.deleteUnitClicked.bind(this)}>Delete Unit</Button>\n                    </Col> ) : (\n                    <Col xs={3}/>\n                    )}\n                    <Col xs={3}>\n                        <Button block variant=\"success\" onClick={this.markAllFinishedClicked.bind(this)}>Mark All Finished</Button>\n                    </Col>\n                </Row>\n\n                <h4 className=\"border-bottom-custom\">Description</h4>\n                <p>{this.state.unit.description}</p>\n\n                <h4 className=\"border-bottom-custom\">Build</h4>\n                {this.state.buildList.map(\n                        build =>\n                        <p>Build {build.name}</p>\n                    )\n                }\n\n                <h4 className=\"border-bottom-custom\">Load in</h4>\n                {this.state.loadInList.map(\n                        loadIn =>\n                        <>\n                        <p>Load {loadIn.name}</p>\n                        <p>work hours {loadIn.workHours}</p>\n                        <p>number of crew {loadIn.numberOfCrew}</p>\n                        <p>Description {loadIn.description}</p>\n                        <p></p>\n                        </>\n                    )\n                }\n\n                <h4 className=\"border-bottom-custom\">Materials</h4>\n                {this.state.materials.map(\n                        material =>\n                        <>\n                        <p>material {material.name}</p>\n                        <p>material cost {material.cost}</p>\n                        <p>material amount required {material.amountRequired}</p>\n                        <p>vendor {material.vendor}</p>\n                        </>\n                    )\n                } \n                \n\n            </Container>\n        )\n    }\n}\n\nexport default UnitComponent","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Table from 'react-bootstrap/Table'\nimport Modal from 'react-bootstrap/Modal'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport ModalFooter from 'react-bootstrap/ModalFooter'\nimport ModalTitle from 'react-bootstrap/ModalTitle'\nimport ModalBody from 'react-bootstrap/ModalBody'\nimport Form from 'react-bootstrap/Form'\nimport ProjectService from '../service/ProjectService.jsx'\n\nclass StaffComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            staff: [],\n            showModal: false,\n            username: '',\n            owner: false,\n            errorMessage: '',\n            showErrorMessage: false\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.refreshStaff = this.refreshStaff.bind(this)\n        this.toggle = this.toggle.bind(this);\n        this.addStaffClicked = this.addStaffClicked.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState(\n            {[event.target.name]: event.target.value}\n        )\n        console.log(this.state.username)\n    }\n\n    componentDidMount() {\n        this.refreshStaff();\n    }\n\n    refreshStaff() {\n        ProjectService.retrieveStaff(this.props.match.params.id)\n            .then(\n                response => {\n                    this.setState({ staff: response.data })\n                }\n            )\n    }\n\n    addStaffClicked() {\n        console.log(\"add staff\")\n        ProjectService.addStaffToProject(this.state.username, \n            this.props.match.params.id, \n            this.state.owner)\n            .then((response) => {\n                if (response.data.success) {\n                    this.refreshStaff();\n                    this.setState({showModal: !this.state.showModal});\n                    console.log(\"added staff successfully\")\n                    this.setState({ showErrorMessage: false })\n                } else {\n                    console.log(\"failed to add staff\")\n                    this.setState({ showErrorMessage: true })\n                    this.setState({errorMessage: \"Failed to Add Staff\"})\n                }\n                \n            }).catch(() => {\n                console.log(\"error adding staff\")\n                this.setState({ showErrorMessage: true })\n                this.setState({errorMessage: \"Error Adding Staff\"})\n            })\n    }\n\n    toggle() {\n        this.setState({showModal: !this.state.showModal});\n    }\n\n    render() {\n        return (\n            <Container className=\"mt-3\">\n                \n                <h2 className=\"border-bottom-custom\">Staff</h2>\n\n                {this.props.location.state.owner && \n                <Row className=\"mt-3\">\n                    <Col xs={2}/>\n                    <Col>\n                        <Button block onClick={this.toggle}>Add User to Show</Button>\n                    </Col>\n                    <Col xs={2}/>\n                </Row>\n                }\n\n                <Modal show={this.state.showModal}>\n                    <ModalHeader closeButton onClick={this.toggle}>\n                    <ModalTitle>Add User</ModalTitle>\n                    </ModalHeader>\n                    <ModalBody>\n                        <Form>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\"\n                            name=\"username\" value={this.state.username}\n                            onChange={this.handleChange}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"Project Owner?\"\n                            name=\"owner\" value={this.state.owner}\n                            onChange={this.handleChange}/>\n                        </Form.Group>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                    <Button variant=\"secondary\" onClick={this.toggle}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={this.addStaffClicked}>\n                        Add User!\n                    </Button>\n                    </ModalFooter>\n                </Modal>\n\n                <Table className=\"mt-3\" striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>Username</th>\n                    <th>Owner</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {this.state.staff.map(\n                            staff =>\n                            <tr>\n                            <td>{staff.username}</td>\n                            <td>{(staff.owner ? 'Project Owner' : 'Staff Member')}</td>                       \n                            </tr>\n                        )\n                    } \n                </tbody>\n                </Table>\n\n            </Container>\n        )\n    }\n}\n\nexport default StaffComponent","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\n\nimport {\n    Switch,\n    withRouter\n  } from \"react-router-dom\"\nimport SummaryComponent from './SummaryComponent';\nimport UnitsComponent from './UnitsComponent';\nimport AddUnitComponent from \"./AddUnitComponent\";\nimport UnitComponent from \"./UnitComponent\";\nimport StaffComponent from \"./StaffComponent\";\nimport AuthenticatedRoute from './AuthenticatedRoute';\nimport Nav from 'react-bootstrap/Nav'\nimport ProjectService from '../service/ProjectService.jsx'\n\nclass ProjectDetailsComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            key: this.props.key,\n            owner: false\n        }\n\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleSelectSummary = this.handleSelectSummary.bind(this);\n        this.refreshOwner = this.refreshOwner.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshOwner();\n    }\n\n    refreshOwner() {\n        ProjectService.isOwner(this.props.match.params.id)\n            .then(\n                response => {\n                    this.setState({ owner: response.data })\n                }\n            )\n    }\n\n    handleSelect(selctedKey) {\n        var url = this.props.match.url\n        this.props.history.push({\n            pathname: url + '/' + selctedKey,\n            state: { key: selctedKey,\n                url: url,\n                owner: this.state.owner },\n        })\n    }\n\n    handleSelectSummary(selctedKey) {\n        this.props.history.push({\n            pathname: this.props.match.url,\n            state: { key: selctedKey,\n                owner: this.state.owner }\n        })\n    }\n\n    render() {\n        let path = this.props.match.path\n\n        return (\n            <Container className=\"mt-3\">\n\n                {/* Navigation tabs */}\n                <Nav justify variant=\"tabs\" defaultActiveKey=\"summary\" activeKey={this.state.key}>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"summary\" onSelect={this.handleSelectSummary}>Summary</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"staff\" onSelect={this.handleSelect}>Staff</Nav.Link>\n                </Nav.Item>\n                </Nav.Item>\n                <Nav.Item >\n                    <Nav.Link eventKey=\"units\" onSelect={this.handleSelect}>Units</Nav.Link>\n                </Nav.Item>\n                </Nav>\n\n                <Switch>\n                    <AuthenticatedRoute exact path={path} component={SummaryComponent}/>\n                    <AuthenticatedRoute exact path={`${path}/staff`} component={StaffComponent} />\n                    <AuthenticatedRoute exact path={`${path}/units`} component={UnitsComponent} />\n                    <AuthenticatedRoute exact path={`${path}/unit`} component={UnitComponent} />\n                    <AuthenticatedRoute exact path={`${path}/units/new`} component={AddUnitComponent} />\n                </Switch>\n                \n                {/* <Route path=\"/admin/groups\" component={AdminGroups} /> */}\n\n                {/* </Row> */}\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(ProjectDetailsComponent)\n","import React, { Component } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\"\nimport NavigationBar from \"./NavigationBar\"\nimport LoginComponent from './LoginComponent'\nimport AboutComponent from './AboutComponent'\nimport AddUserComponent from './AddUserComponent'\nimport LogoutComponent from './LogoutComponent'\nimport ListProjectsComponent from \"./ListProjectsComponent\"\nimport AuthenticatedRoute from \"./AuthenticatedRoute\"\nimport AddProjectComponent from \"./AddProjectComponent\"\nimport ProjectDetailsComponent from \"./ProjectDetailsComponent\"\n\nclass BudgetApp extends Component {\n\n  // constructor(props) {\n  //   super(props)\n  //   this.state = {\n  //     isLoggedIn : AuthenticationService.isUserLoggedIn()\n  //   }\n  //   this.handleChange = this.handleChange.bind(this)\n  // }\n\n  // handleChange(event) {\n  //       this.setState(\n  //           {\n  //               [event.target.name]\n  //                   : event.target.value\n  //           }\n  //       )\n  //   }\n\n  //   componentDidUpdate(prevProps) {\n  //       console.log(\"did update\")\n  //       if (this.props.location.pathname !== prevProps.location.pathname) {\n  //           console.log(\"update!\", this.state.loggedIn)\n  //           var event\n  //           event.target.name = this.state.loggedIn;\n  //           event.target.value = AuthenticationService.isUserLoggedIn();\n  //           this.handleChange(event)\n  //           // var loggedInUser = AuthenticationService.isUserLoggedIn()\n  //           // this.setState({loggedIn, isUserLoggedIn})\n  //           // this.setState(this.state.loggedInUserName, loggedInUser)\n  //       }\n  //   }\n\n  render() {\n    // var loggedIn = AuthenticationService.isUserLoggedIn()\n    // var loggedInUserName = AuthenticationService.getLoggedInUserName()\n\n      return (\n          <>\n          <Router>\n              {/* <NavigationBar isLoggedIn={this.state.loggedIn}/> */}\n              <NavigationBar/>\n            <div>\n      \n              <Switch>\n                  <Route path=\"/\" exact component={LoginComponent} />\n                  <Route path=\"/login\" exact component={LoginComponent} />\n                  <Route path=\"/logout\" exact component={LogoutComponent} />\n                  <Route path=\"/about\" exact component={AboutComponent} />\n                  <Route path=\"/new/user\" exact component={AddUserComponent} />\n                  <AuthenticatedRoute path=\"/projects\" exact component={ListProjectsComponent} />\n                  <AuthenticatedRoute path=\"/projects/create\" exact component={AddProjectComponent} />\n                  <AuthenticatedRoute path=\"/project/:id\" component={ProjectDetailsComponent}/>\n                  {/* <AuthenticatedRoute path=\"/project/:id\" render={(props) => <ProjectDetailsComponent {...props} />} /> */}\n              </Switch>\n            </div>\n          </Router>\n          </>\n        );\n  }\n}\n\nexport default BudgetApp\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BudgetApp from './component/BudgetApp.jsx';\n\nfunction App() {\n  return (\n    <div>\n      <BudgetApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}